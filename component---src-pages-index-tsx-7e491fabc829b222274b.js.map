{"version":3,"file":"component---src-pages-index-tsx-7e491fabc829b222274b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Matrix/index.jsx","webpack://gatsby-starter-default/./src/components/Matrix/MatrixCharacter.jsx","webpack://gatsby-starter-default/./src/components/Matrix/MatrixRainDrop.jsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport \"./matrix.css\";\nimport MatrixRainDrop from \"./MatrixRainDrop\";\n\nconst originalChars =\n  \"一〇九二人入八刀力十又乃万丈三上下丸久亡凡刃千口土夕大女寸小山川工己干弓才之巾々中互五井今介元公六升午天太夫少尺支文木欠毛火父牛犬王允爪勿只号央失矢未末本主白示立市穴它いうえくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばひびぷへべぺまみむめもやゆよらりるれろわゐんゔ゠ァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロヮワヰヱヲンヴヵヶヷヸヹヺ・ーヽヾヿ･ｰ0123456789-+=*?!@#<>\";\n\nconst columns = 30;\nconst rows = 30;\nconst characterRetype = 10;\nconst interval = 10;\nconst shuffle = (str) => [...str].sort(() => Math.random() - 0.5).join(\"\");\nconst chars = shuffle(originalChars);\nconst numberOfChars = chars.length;\n\nconst scales = Array(columns)\n  .fill()\n  .map((e, i) => {\n    const distance = Math.random();\n    return {\n      transform: `scale(${distance + 0.5}) translate(${\n        distance * 500 - 100\n      }%, 0)`,\n      filter: `blur(${Math.abs(0.5 - distance) * 5}px)`,\n    };\n  });\n\nconst fillCharMatrix = () => {\n  let tempArray = [];\n  for (let i = 0; i < columns; i++) {\n    let column = [];\n\n    for (let j = 0; j < rows; j++) {\n      const char = chars[Math.floor(Math.random() * numberOfChars)];\n      column.push(char);\n    }\n    tempArray.push(column);\n  }\n  return tempArray;\n};\n\nconst initialColumnRandomness = Array(columns)\n  .fill()\n  .map(() => Math.floor(Math.random() * rows));\n\nconst Matrix = () => {\n  const [columnRandomness, setColumnRandomness] = useState(\n    initialColumnRandomness\n  );\n  const [counter, setCounter] = useState(0);\n  const [charMatrix, setCharMatrix] = useState(fillCharMatrix());\n\n  useEffect(() => {\n    let intervalId = setInterval(() => {\n      setCounter((counter) => counter + 1);\n    }, interval);\n\n    return () => {\n      clearTimeout(intervalId);\n    };\n  }, []);\n\n  useEffect(() => {\n    const tempchars = [...charMatrix];\n    setColumnRandomness(\n      columnRandomness.map((e, i) => {\n        if (counter % characterRetype === 0) {\n          return e === 0 ? rows : e - 1;\n        }\n        return e;\n      })\n    );\n    setCharMatrix(\n      tempchars.map((e, i) => {\n        return tempchars[i].map((c, j) => {\n          if (j === columnRandomness[i]) {\n            return chars[Math.floor(Math.random() * numberOfChars)];\n          }\n          return c;\n        });\n      })\n    );\n  }, [counter]);\n\n  return (\n    <div className=\"matrix-canvas\">\n      <div className=\"matrix-rain\">\n        {charMatrix &&\n          charMatrix.map((e, j) => (\n            <MatrixRainDrop\n              key={j}\n              chars={e}\n              columnIndex={j}\n              random={columnRandomness[j]}\n              rows={rows}\n              scale={scales[j]}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Matrix;\n","import React from \"react\";\n\nconst charHeight = 26;\nconst rainDropHeight = 20; // numberOfChars * charHeight;\n\nconst MatrixCharacter = ({ index, random, char, rows }) => {\n  const yPos = index >= random ? index - random : rows - (random - index);\n\n  return (\n    <div\n      key={index}\n      className={`matrix-character matrix-character--${yPos}`}\n      style={{ top: rainDropHeight - yPos * charHeight }}\n    >\n      <div className={`character__level1`}>{char}</div>\n      <div className={`character__level2`}>{char}</div>\n      <div className={`character__level3`}>{char}</div>\n    </div>\n  );\n};\n\nexport default MatrixCharacter;\n","import React from \"react\";\n\nimport MatrixCharacter from \"./MatrixCharacter\";\n\nconst MatrixRainDrop = ({ random, scale, chars, rows }) => {\n  return (\n    <div className=\"matrix-rainDrop\" style={scale}>\n      {chars.map((e, i) => (\n        <MatrixCharacter\n          key={i}\n          index={i}\n          random={random}\n          char={e}\n          rows={rows}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default MatrixRainDrop;\n","import React from \"react\";\n// import Link from 'gatsby-link'\n\nimport { Container, Header, Segment } from \"semantic-ui-react\";\n\nimport Layout from \"../components/Layout\";\nimport Matrix from \"../components/Matrix\";\n\nconst IndexPage = () => (\n  <Layout className=\"home\">\n    <div className=\"homePage\">\n      <Matrix />\n\n      <Container></Container>\n    </div>\n  </Layout>\n);\n\nexport default IndexPage;\n"],"names":["str","index","random","char","rows","yPos","key","className","style","top","scale","chars","map","e","i","sort","Math","join","numberOfChars","length","scales","Array","fill","distance","transform","filter","abs","initialColumnRandomness","floor","useState","columnRandomness","setColumnRandomness","counter","setCounter","tempArray","column","j","push","fillCharMatrix","charMatrix","setCharMatrix","useEffect","intervalId","setInterval","clearTimeout","tempchars","c","columnIndex","Layout","Container"],"sourceRoot":""}